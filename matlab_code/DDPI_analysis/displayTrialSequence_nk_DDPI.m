function displayTrialSequence_nk_DDPI(vt, trials,sRate)

% BackgroundColor = [0.85 0.85 0.85];
% MainFigure = figure('Visible', 'on', ...
%     'Name', 'Display Trial', ...
%     ...
%     'NumberTitle', 'off', ...
%     'Toolbar', 'figure', ...
%     'Resize', 'on', 'Color', BackgroundColor);
% 'Position', [400 100 1200 830], 
% set(MainFigure, 'PaperPositionMode','auto');
% set(MainFigure, 'InvertHardcopy','off');
% set(MainFigure, 'Units','pixels');
% [pxAngle] = CalculatePxAngle(vt{1}.Xres, 1550, 600);
% vt = osRemoverInEM(vt);

% DelayAfterTOn = 450;

for idx = 1:length(trials)
    ii = trials(idx);
    X = double(vt{ii}.x.position) + vt{ii}.xoffset * vt{ii}.pixelAngle;
    Y = double(vt{ii}.y.position) + vt{ii}.yoffset * vt{ii}.pixelAngle;
%     X = X.*(1000/sRate);%if you do this you are changing the actual x and y position not the length of the vector
%     Y = Y.*(1000/sRate);

%     CueCtr = vt{ii}.cueCtr* (sRate/1000);
%     StimOFF = vt{ii}.stimOff * (sRate/1000);
%     Quit = vt{ii}.quit* (sRate/1000);
%     SaccON = vt{ii}.saccOn* (sRate/1000);
%     FlashON = vt{ii}.flashOn* (sRate/1000);
%     SaccOFF = vt{ii}.saccOff*(sRate/1000);
    
    CueCtr = vt{ii}.cueCtr;
    SaccON = vt{ii}.saccOn;
    FlashON = vt{ii}.flashOn;
    SaccOFF = vt{ii}.saccOff;
    StimOFF = vt{ii}.stimOff;
    Quit = vt{ii}.quit;
       
    hold on
%     Limits = [-100,500];
    
    % peripheral cue
%     h_c = fill([CuePrf CuePrf ...
%         CueCtr ...
%         CueCtr], ...
%         [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
%         [255 175 100]/255, ...
%         'EdgeColor', [255 175 100]/255, ...
%         'LineWidth', 2, 'Clipping', 'On');
%             [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...

    % central cue
    h_fixOff = line([CueCtr CueCtr],[-200 500],'Color',[50 80 175]/255,'LineWidth', 2);
%     h_t = fill([CueCtr CueCtr ...
%         SaccON ...
%         SaccON], ...
%         [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
%         [175 230 100]/255, ...
%         'EdgeColor', [175 230 100]/255, ...
%         'LineWidth', 2, 'Clipping', 'On');
%      [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
    
    %sacc On
    h_saccOn = line([SaccON SaccON],[-200 500],'Color',[0 1 1],'LineWidth', 2);
%     h_stim = fill([SaccON SaccON ...
%         FlashON...
%         FlashON], ...
%         [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
%         [50 80 175]/255, ...
%         'EdgeColor', [50 80 175]/255, ...
%         'LineWidth', 2, 'Clipping', 'On');
    
    % flash 
    h_flashOn = line([FlashON FlashON],[-200 500],'Color',[175 230 100]/255,'LineWidth', 1);
%     h_s = fill([FlashON FlashON ...
%         SaccOFF ...
%         SaccOFF], ...
%         [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
%         [175 80 20]/255, ...
%         'EdgeColor', [175 80 20]/255, ...
%         'LineWidth', 2, 'Clipping', 'On');
%     [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
    
    % sacc off 
    h_saccOff = line([SaccOFF SaccOFF],[-200 500],'Color',[255 175 100]/255,'LineWidth', 2);
%     h_r = fill([SaccOFF SaccOFF ...
%         StimOFF ...
%         StimOFF], ...
%         [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
%         [70 100 20]/255, ...
%         'EdgeColor', [70 100 20]/255, ...
%         'LineWidth', 1, 'Clipping', 'On');
%      [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
    
%     h_saccOff = line([SaccOFF SaccOFF],[-200 500],'Color',[0 1 1],'LineWidth', 2);
    h_stimOff = line([StimOFF StimOFF],[-200 500],'Color', [175 80 20]/255,'LineWidth', 2);
    
    
    h_quit = line([Quit Quit],[-200 500],'Color',[70 100 20]/255,'LineWidth', 2);
%     h_c = fill([StimOFF StimOFF ...
%         Quit ...
%         Quit], ...
%         [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
%         [255 175 100]/255, ...
%         'EdgeColor', [255 175 100]/255, ...
%         'LineWidth', 2, 'Clipping', 'On');
%             [Limits(1) (Limits(2) - 0.5) (Limits(2) - 0.5) Limits(1)], ...
                
        % valid ms time interval
%     h_validMs = fill([TargetON + 80, TargetON + 80, ...
%         RespCueON, ...
%         RespCueON], ...
%         [Limits(1), (Limits(2) - 0.5), (Limits(2) - 0.5), Limits(1)], ...
%         'b', 'LineWidth', 2, 'EdgeColor', 'b', ...
%         'Clipping', 'On', 'FaceAlpha', .25);
    
%     h_noMs = fill([TargetON - 100, TargetON - 100, ...
%         TargetON + DelayAfterTOn, ...
%         TargetON + DelayAfterTOn], ...
%         [Limits(1), (Limits(2) - 0.5), (Limits(2) - 0.5), Limits(1)], ...
%         'm', 'LineWidth', 2, 'EdgeColor', 'm', ...
%         'Clipping', 'On', 'FaceAlpha', .25);
    
%     h_clearMs = fill([SaccCueON - 80, SaccCueON - 80, ...
%         TargetON, TargetON], ...
%         [Limits(1), (Limits(2) - 0.5), (Limits(2) - 0.5), Limits(1)], ...
%         'r', 'LineWidth', 2, 'EdgeColor', 'r', ...
%         'Clipping', 'On', 'FaceAlpha', .25);
    tm = ((1:length(X)) .* (1/sRate) .* 1000);
    hx =  plot(tm,X, 'Color', [0 0 200] / 255, 'HitTest', 'off'); % blue
    hy =  plot(tm,Y, 'Color', [0 180 0] / 255, 'HitTest', 'off'); % green
%     hx =  plot(X, 'Color', [0 0 200] / 255, 'HitTest', 'off'); % blue
%     hy =  plot(Y, 'Color', [0 180 0] / 255, 'HitTest', 'off'); % green
%     ylim([-35,35])
%     if vt{ii}.SaccCueType == 1
%         TposR = plot([0 5000], [vt{ii}.TargetOffsetpx * pxAngle, vt{ii}.TargetOffsetpx * pxAngle], 'g', 'LineWidth', 3);
%         TposL = plot([0 5000], [-vt{ii}.TargetOffsetpx * pxAngle, -vt{ii}.TargetOffsetpx * pxAngle], 'k', 'LineWidth', 1);
%     elseif vt{ii}.SaccCueType == 3
%         TposR = plot([0 5000], [vt{ii}.TargetOffsetpx * pxAngle, vt{ii}.TargetOffsetpx * pxAngle], 'b', 'LineWidth', 3);
%         TposL = plot([0 5000], [-vt{ii}.TargetOffsetpx * pxAngle, -vt{ii}.TargetOffsetpx * pxAngle], 'k', 'LineWidth', 1);
%     elseif vt{ii}.SaccCueType == 5
%         TposR = plot([0 5000], [vt{ii}.TargetOffsetpx * pxAngle, vt{ii}.TargetOffsetpx * pxAngle], 'k', 'LineWidth', 1);
%         TposL = plot([0 5000], [-vt{ii}.TargetOffsetpx * pxAngle, -vt{ii}.TargetOffsetpx * pxAngle], 'g', 'LineWidth', 3);
%     elseif vt{ii}.SaccCueType == 7
%         TposR = plot([0 5000], [vt{ii}.TargetOffsetpx * pxAngle, vt{ii}.TargetOffsetpx * pxAngle], 'k', 'LineWidth', 1);
%         TposL = plot([0 5000], [-vt{ii}.TargetOffsetpx * pxAngle, -vt{ii}.TargetOffsetpx * pxAngle], 'b', 'LineWidth', 3);
%     end
    
%     % sacc cue direction
%     if vt{ii}.SaccCueType == 5
%         plot(1,vt{ii}.TargetOffsetpx*pxAngle, '*', 'LineWidth', 10)
%     elseif vt{ii}.SaccCueType == 2
%         plot(1,-vt{ii}.TargetOffsetpx*pxAngle, '*', 'LineWidth', 10)
%     elseif vt{ii}.SaccCueType == 0
%         plot(1,vt{ii}.TargetOffsetpx*pxAngle, '*', 'LineWidth', 10)
%         plot(1,-vt{ii}.TargetOffsetpx*pxAngle, '*', 'LineWidth', 10)
%     end
%     

%     legend boxoff
    legend([hx hy h_fixOff h_saccOn h_flashOn h_saccOff h_stimOff h_quit], 'X', 'Y', 'Fixation off','Sacc On','Flash On','Sacc Off/Stim Timer on', 'Stim Off','Quit', ...
       'Location','EastOutside','Orientation','Vertical')
    legend boxoff
%     set(gca,'FontSize', 15, 'YTick', -100:40:500, 'XTick', 0:500:7000)
    grid on
%     xlim([CueCtr Quit]);
%     xlim([CueCtr (StimOFF+100)]);
    xlabel('time [ms]')
    ylabel('arcmin')
%     title(['Trial No. ',num2str(ii)]);    
end


end